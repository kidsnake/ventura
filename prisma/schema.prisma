// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  Quiz          Quiz?     @relation(fields: [quizId], references: [id])
  quizId        String?   @db.ObjectId
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Quiz {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  startDate   DateTime
  endDate     DateTime
  questions   Question[]
  owner       User[]
  userId      String     @db.ObjectId
}

model Question {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  points      Int
  answers     Answer[]

  Quiz   Quiz?   @relation(fields: [quizId], references: [id])
  quizId String? @db.ObjectId
}

model Answer {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
  isCorrect   Boolean

  Question   Question? @relation(fields: [questionId], references: [id])
  questionId String?   @db.ObjectId
}
